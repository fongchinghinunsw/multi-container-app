# there's an upstream called react-server which is
# at port 3000
upstream react-server {
    server react-server:3000;
}

upstream express-server {
    server express-server:5000;
}
# the nginx server listens to port 80
server {
    listen 80;
    # routing rules
    # route '/` to this nginx server to http://react-server
    location / {
        proxy_pass http://react-server;
    }
    # Resolve `canâ€™t establish a connection to the server at ws://localhost:3000/ws`
    # which appears in the browser's console.
    # Essentially, we're seeing this error message because any
    # time our react application boots up in development mode,
    # it wants to keep an active connection to the development
    # server and be notified of any time that some file changes,
    # telling it that the browser needs to automatically reload.
    # The problem is that we have not set up our Internet server
    # to allow WebSocket connections.
    location /ws {
        proxy_pass http://react-server;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
    # route '/api` to this nginx server to http://express-server
    location /api {
        # rewrite the route from /api/something to /something
        # so that the final route becomes http://express-server/something
        # `break` tells nginx not to perform other rewrite rules
        rewrite /api/(.*) /$1 break;
        proxy_pass http://express-server;
    }
}